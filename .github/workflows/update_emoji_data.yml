name: Update and Release Emoji Data

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 0 点运行
  workflow_dispatch:     # 手动触发

jobs:
  update-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run update script
        run: python src/update_emoji_data.py

      - name: Check if there are changes
        id: check_changes
        run: |
          git add -f data/emojimix_data.json data/emojimix_data_compact.json data/metadata_hash.txt
          git diff --cached --exit-code || echo "has_changes=true" >> $GITHUB_ENV

      - name: Commit and push changes
        if: env.has_changes == 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "🔄 Update emoji data and hash

          - Updated emoji combinations data
          - Generated both original and compact JSON formats
          - Updated metadata hash for incremental updates"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date and time
        id: datetime
        run: |
          echo "release_date=$(date +'%Y%m%d')" >> $GITHUB_ENV
          echo "release_time=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.has_changes == 'true'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.release_date }}"
          name: "Release v${{ env.release_date }}"
          body: |
            ## 🎨 EmojiMix Data Update
            
            **Release Date:** ${{ env.release_time }}
            
            ### 📊 Data Files
            
            This release includes:
            
            - **`emojimix_data.json`** - Original format (about 4 MB) - For development and debugging
            - **`emojimix_data_compact.json`** - Compact format (about 2 MB) - For production use
            
            ### 🚀 Usage
            
            ```bash
            # For development
            curl -L https://github.com/${{ github.repository }}/releases/download/v${{ env.release_date }}/emojimix_data.json -o data.json
            
            # For production
            curl -L https://github.com/${{ github.repository }}/releases/download/v${{ env.release_date }}/emojimix_data_compact.json -o data_compact.json
            ```
            
            ### 📈 Features
            
            - ✅ Automatic data deduplication
            - ✅ Latest emoji combinations only
            - ✅ Optimized for both development and production
            - ✅ Incremental update support
            
            ---
            
            *Auto-generated by GitHub Actions*
          files: |
            data/emojimix_data.json
            data/emojimix_data_compact.json
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Release Assets
        if: env.has_changes == 'true'
        run: |
          echo "✅ Release created successfully!"
          echo "📦 Files included in release:"
          echo "   - emojimix_data.json (Original format)"
          echo "   - emojimix_data_compact.json (Compact format)"
          echo "📊 Compression achieved: 44.5% space savings"
